name: lint-and-annotate

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        linter:
          - { id: "shellcheck", cmd: "shellcheck -f gcc $(git ls-files '*.sh')" }
          - { id: "black", cmd: "black --check --diff ." }
          - { id: "golangci", cmd: "golangci-lint run --out-format=checkstyle" }
          - { id: "ruff", cmd: "ruff --output-format=github ." }
          - { id: "clang-tidy", cmd: "clang-tidy $(git ls-files '*.c' '*.h') || true" }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - uses: actions/setup-python@v5
      - name: Install linter runtime deps
        run: |
          sudo apt-get update -y
          sudo apt-get install -y shellcheck clang clang-tidy
      - name: Run ${{ matrix.linter.id }} & feed Reviewdog
        uses: reviewdog/reviewdog@master
        with:
          name: ${{ matrix.linter.id }}
          reporter: github-pr-check
          filter_mode: diff_context
          fail_level: error
          run: ${{ matrix.linter.cmd }}
          level: warning
      - name: Emit summary
        if: always()
        run: reviewdog -reporter=local -format=rdjson -f .rdjson > $RUNNER_TEMP/rd.json
